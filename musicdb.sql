DROP TABLE IF EXISTS ALBUM;
DROP TABLE IF EXISTS ARTIST;
DROP TABLE IF EXISTS COMPOSED_BY;
DROP TABLE IF EXISTS RECORD_LABEL;
DROP TABLE IF EXISTS SUNG_IN;
DROP TABLE IF EXISTS TOURS;
DROP TABLE IF EXISTS TRACK;


CREATE TABLE ALBUM(
	ALBUM_ID INTEGER NOT NULL UNIQUE,
	ALBUM_NAME VARCHAR(50) NOT NULL,
	DURATION NUMERIC(4, 2),
	TRACKLIST INTEGER,
	RELEASE_DATE DATE,
	PRIMARY KEY (ALBUM_ID)
);

CREATE TABLE ARTIST(
	ARTIST_ID INTEGER NOT NULL UNIQUE,
	ARTIST_NAME VARCHAR(50) NOT NULL,
	CITY VARCHAR(20),
	COUNTRY VARCHAR(20),
	CATEGORY VARCHAR(20),
	START_YEAR INTEGER,
	LABEL_NAME VARCHAR(30),
	PRIMARY KEY (ARTIST_ID),
	FOREIGN KEY (LABEL_NAME) REFERENCES RECORD_LABEL (LABEL_NAME)
);

CREATE TABLE COMPOSED_BY (
	ALBUM_ID INTEGER NOT NULL,
	ARTIST_ID INTEGER NOT NULL,
	PRIMARY KEY (ALBUM_ID, ARTIST_ID),
	FOREIGN KEY (ALBUM_ID) REFERENCES ALBUM (ALBUM_ID),
	FOREIGN KEY (ARTIST_ID) REFERENCES ARTIST (ARTIST_ID)
);

CREATE TABLE RECORD_LABEL (
	LABEL_NAME VARCHAR(50) NOT NULL,
	PHONE_NO INTEGER NOT NULL,
	ADDRESS VARCHAR(50),
	EMAIL_ID VARCHAR(50),
	SUBSCRIBERS INTEGER,
	PRIMARY KEY (LABEL_NAME)
);

CREATE TABLE SUNG_IN(
	ARTIST_ID INTEGER NOT NULL,
	TRACK_ID INTEGER NOT NULL,
	FOREIGN KEY (TRACK_ID) REFERENCES TRACK(TRACK_ID),
	FOREIGN KEY (ARTIST_ID) REFERENCES ARTIST (ARTIST_ID),
	PRIMARY KEY (ARTIST_ID, TRACK_ID)
);

CREATE TABLE TOURS(
	TOUR_NAME VARCHAR(50) NOT NULL UNIQUE,
	NO_OF_SHOWS INTEGER NOT NULL,
	BOX_OFFICE NUMERIC(4, 2),
	ARTIST_ID INTEGER,
	PRIMARY KEY (TOUR_NAME),
	FOREIGN KEY (ARTIST_ID) REFERENCES ARTIST (ARTIST_ID)
);

CREATE TABLE TRACK(
	TRACK_ID INTEGER NOT NULL UNIQUE,
	TRACK_NAME VARCHAR(50) NOT NULL UNIQUE,
	T_DURATION NUMERIC(4, 2),
	GENRE VARCHAR(20),
	ALBUM_ID INTEGER,
	PRIMARY KEY (TRACK_ID),
	FOREIGN KEY (ALBUM_ID) REFERENCES ALBUM (ALBUM_ID)
)



INSERT INTO ALBUM (ALBUM_ID, ALBUM_NAME, DURATION, TRACKLIST, RELEASE_DATE )
VALUES 
(100, '1989', 48.41, 15, '2014-10-27'),
(101, 'FOUR', 43.33, 12, '2014-11-17'),
(102, 'EVOLVE', 39.12, 12, '2017-06-23'),
(103, 'ILLUMINATE', 44.34, 15, '2016-09-23'),
(104, 'SWEETENER', 47.25, 15, '2018-08-17'),
(105, 'DIVIDE', 46.14, 16, '2017-03-03'),
(106, '25', 48.24, 11, '2015-11-20'),
(107, 'V', 40.10, 15, '2014-08-29'),
(108, 'FINE LINE', 46.37, 12, '2019-12-13'),
(109, 'MIDNIGHT MEMORIES', 47.41, 14, '2013-11-25');



INSERT INTO ARTIST (ARTIST_ID, ARTIST_NAME, CITY, COUNTRY, CATEGORY, START_YEAR, LABEL_NAME)
VALUES 
(1359, 'ONE DIRECTION', 'LONDON', 'UK', 'BOYBAND', 2010, 'COLUMBIA RECORDS'),
(1007, 'ARIANA GRANDE', 'FLORIDA', 'USA', 'FEMALE SOLO', 2008, 'REPUBLIC RECORDS'),
(1626, 'HARRY STYLES', 'CHESHIRE', 'UK', 'MALE SOLO', 2010, 'COLUMBIA RECORDS'),
(1092, 'SHAWN MENDES', 'ONTARIO', 'CANADA', 'MALE SOLO', 2013, 'ISLAND RECORDS'),
(1234, 'TAYLOR SWIFT', 'WEST READING', 'USA', 'FEMALE SOLO', 2004, 'BIG MACHINE RECORDS'),
(1483, 'ADELE', 'LONDON', 'UK', 'FEMALE SOLO', 2006, 'COLUMBIA RECORDS'),
(1826, 'IMAGINE DRAGON', 'LAS VEGAS', 'USA', 'BOYBAND', 2008, 'INTERSCOPE RECORDS'),
(1392, 'MAROON 5', 'LOS ANGELES', 'USA', 'BOYBAND', 1994, 'INTERSCOPE RECORDS'),
(1845, 'ED SHEERAN', 'YORKSHIRE', 'UK', 'MALE SOLO', 2004, 'ASYLUM RECORDS');


INSERT INTO COMPOSED_BY (ALBUM_ID, ARTIST_ID)
VALUES
(106, 1483),
(101, 1359),
(104, 1007),
(108, 1626),
(102, 1826),
(100, 1234),
(107, 1392),
(109, 1359),
(105, 1845),
(103, 1092);


ALTER TABLE RECORD_LABEL
ALTER COLUMN PHONE_NO TYPE VARCHAR(15);

INSERT INTO RECORD_LABEL (LABEL_NAME, PHONE_NO, ADDRESS, EMAIL_ID, SUBSCRIBERS)
VALUES 
('BIG MACHINE RECORDS', '615-518-2785', 'NASHVILLE', 'BIGMACHINE@GMAIL.COM', 3000000),
('COLUMBIA RECORDS', '646-309-7172', 'NEW YORK', 'COLUMBIASONY@GMAIL.COM', 50000000),
('INTERSCOPE RECORDS', '805-239-2262', 'SANTA MONICA', 'INTERSCOPEUNIVERSAL@GMAIL.COM', 20000000),
('ISLAND RECORDS', '920-577-2618', 'SEATTLE', 'ISLAND@GMAIL.COM', 18000000),
('REPUBLIC RECORDS', '646-309-7172', 'NEW YORK', 'REPUBLIC@GMAIL.COM', 30000000),
('ASYLUM RECORDS', '954-839-8112', 'ORLANDO', 'ASYLUM@GMAIL.COM', 9700000);



INSERT INTO SUNG_IN (ARTIST_ID, TRACK_ID)
VALUES 
(1626, 99), 
(1359, 15), 
(1826, 65),
(1359, 55),
(1092, 33),
(1359, 17),
(1092, 36),
(1007, 83),
(1626, 96),
(1392, 48),
(1845, 01),
(1234, 27),
(1845, 04),
(1483, 79),
(1234, 22),
(1007, 80),
(1392, 49),
(1483, 73),
(1826, 62),
(1845, 03),
(1626, 93),
(1234, 28),
(1483, 76),
(1234, 26),
(1392, 44),
(1626, 97),
(1359, 50);


ALTER TABLE TOURS
ALTER COLUMN BOX_OFFICE TYPE NUMERIC(8, 2);


INSERT INTO TOURS (TOUR_NAME, NO_OF_SHOWS, BOX_OFFICE, ARTIST_ID)
VALUES 
('MAROON V TOUR', 132, 132.1, 1392),
('ILLUMINATE WORLD TOUR', 60, 39.43, 1092),
('ON THE ROAD AGAIN TOUR', 77, 224.35, 1359),
('DIVIDE TOUR', 258, 776.2, 1845),
('LOVE ON TOUR', 85, NULL, 1626),
('SWEETENER WORLD TOUR', 101, 146.4, 1007),
('WHERE WE ARE TOUR', 69, 313.41, 1359),
('THE 1989 WORLD TOUR', 85, 250.7, 1234),
('ADELE LIVE 2016', 121, 174.92, 1483),
('EVOLVE WORLD TOUR', 136, 33.2, 1826);



INSERT INTO TRACK (TRACK_ID, TRACK_NAME, T_DURATION, GENRE, ALBUM_ID )
VALUES 
(15, 'STEAL MY GIRL', 3.48, 'POP', 101), 
(65, 'THUNDER', 3.07, 'ROCK', 102),
(55, 'BEST SONG EVER', 3.22, 'POP ROCK', 109), 
(33, 'TREAT YOU BETTER', 3.07, 'POP', 103),
(17, 'NIGHT CHANGES', 3.47, 'POP', 101),
(36, 'MERCY', 3.28, 'ROCK', 103),
(83, 'GOD IS A WOMAN', 3.17, 'HIP HOP', 104),
(96, 'FALLING', 4.00, 'SOUL', 108),
(48, 'MAPS', 3.09, 'POP ROCK', 107),
(1, 'PERFECT', 4.23, 'FOLK POP', 105),
(27, 'STYLE', 3.51, 'POP', 100),
(4, 'HAPPIER', 3.27, 'POP', 105),
(79, 'HELLO', 4.55, 'SOUL', 106),
(22, 'BAD BLOOD', 3.31, 'HIP HOP', 100),
(80, 'BREATHING', 3.18, 'DANCE POP', 104),
(49, 'SUGAR', 3.55, 'POP', 107),
(73, 'SEND MY LOVE', 3.43, 'R&B', 106),
(62, 'BELIEVER', 3.24, 'POP ROCK', 102),
(99, 'LIGHTS UP', 2.52, 'R&B', 108),
(3, 'CASTLE ON THE HILL', 4.21, 'FOLK', 105),
(93, 'ADORE YOU', 3.27, 'POP ROCK', 108),
(28, 'SHAKE IT OFF', 3.39, 'DANCE POP', 100),
(76, 'WHEN WE WERE YOUNG', 4.50, 'SOUL', 106),
(26, 'BLANK SPACE', 3.52, 'ELECTRO POP', 100),
(44, 'ANIMALS', 3.51, 'DANCE POP', 107),
(97, 'WATERMELON SUGAR', 2.53, 'ROCK', 108),
(50, 'STORY OF MY LIFE', 4.05, 'POP', 109);


-- 1. List all artists and their record label sorted by artist name using joins.

SELECT ARTIST_NAME, LABEL_NAME
FROM ARTIST 
NATURAL INNER JOIN RECORD_LABEL
ORDER BY ARTIST_NAME

--2. List the number of songs per artist in ascending order.

SELECT ARTIST_ID, ARTIST_NAME, COUNT(TRACK_ID)
FROM ARTIST
NATURAL INNER JOIN SUNG_IN
GROUP BY ARTIST_ID
ORDER BY COUNT(TRACK_ID)

-- 3. Which artists have recorded songs longer than or equal to 4 minutes? Also display the name of the song.

SELECT ARTIST_NAME, TRACK_NAME, T_DURATION
FROM ARTIST
NATURAL INNER JOIN SUNG_IN
NATURAL INNER JOIN TRACK
WHERE T_DURATION >= 4.00


-- 4. Display the albums released after 2014 in ascending order using aggregate functions.

SELECT ALBUM_ID, ALBUM_NAME, RELEASE_DATE
FROM ALBUM
GROUP BY ALBUM_ID
HAVING RELEASE_DATE > '2014-12-31'
ORDER BY RELEASE_DATE

-- 5. List the artist who performed more than 100 shows on tour in descending order.

SELECT A.ARTIST_ID, A.ARTIST_NAME, T.TOUR_NAME, NO_OF_SHOWS
FROM TOURS AS T, ARTIST AS A
WHERE T.ARTIST_ID = A.ARTIST_ID
AND NO_OF_SHOWS > 100
ORDER BY NO_OF_SHOWS DESC

--6. Display the artists who are not from UK.

SELECT ARTIST_ID, ARTIST_NAME, CITY, COUNTRY
FROM ARTIST
WHERE COUNTRY NOT LIKE '%UK%'

-- 7. Find the total duration of all songs recorded by each artist in descending order and the total number of tracks.

SELECT ARTIST_ID, ARTIST_NAME, 
	   SUM(T_DURATION) AS TOTAL_DURATION, 
	   COUNT(TRACK_ID) AS TOTAL_TRACKS
FROM ARTIST 
NATURAL INNER JOIN SUNG_IN 
NATURAL INNER JOIN TRACK
GROUP BY ARTIST_ID
ORDER BY SUM(T_DURATION) DESC

-- 8. Find the average subscribers of all record labels. Also find the maximum and minimum number of subscribers.

SELECT AVG(SUBSCRIBERS),
	   MAX(SUBSCRIBERS),
       MIN(SUBSCRIBERS)
FROM RECORD_LABEL

-- 9. Find all the artists whose box office collection is greater than the average box office collection of all artists.

SELECT A.ARTIST_NAME, T.TOUR_NAME, T.BOX_OFFICE
FROM TOURS AS T, ARTIST AS A
WHERE T.ARTIST_ID = A.ARTIST_ID
AND T.BOX_OFFICE > (
	SELECT AVG(BOX_OFFICE)
	FROM TOURS 
)

-- 10. Display the information of all the solo artists using set operations.

SELECT *
FROM ARTIST
EXCEPT
SELECT *
FROM ARTIST
WHERE CATEGORY LIKE '%BAND%'

-- 11. Update the box office collection of the tour called “love on tour” to 150.5 million.

-- BEFORE THE UPDATE

SELECT *
FROM TOURS
WHERE TOUR_NAME ='LOVE ON TOUR'

-- AFTER THE UPDATE

UPDATE TOURS
SET BOX_OFFICE = 150.5
WHERE TOUR_NAME = 'LOVE ON TOUR'

-- 12. Delete all records of track with ID = 4 from the database.

-- BEFORE DELETING FROM SUNG_IN

SELECT *
FROM SUNG_IN
WHERE TRACK_ID = 4

-- AFTER DELETING FROM SUNG_IN

DELETE FROM SUNG_IN
WHERE TRACK_ID = 4

-- BEFORE DELETING FROM TRACK

SELECT *
FROM TRACK
WHERE TRACK_ID = 4

-- AFTER DELETING FROM TRACK

DELETE FROM TRACK
WHERE TRACK_ID = 4